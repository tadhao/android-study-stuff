 private GoogleMap mMap;
    LocationManager locationManager;
    LocationListener locationListener;
	 @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        if(grantResults.length>0 && grantResults[0]== PackageManager.PERMISSION_GRANTED){
            if(ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)== PackageManager.PERMISSION_GRANTED){
                locationManager= (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
                Location lastKnownLocation= locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
                centerMapOnLocation(lastKnownLocation, "Your Location");

            }
        }
    }


    public void centerMapOnLocation(Location location, String title){
        LatLng userLocation= new LatLng(location.getLatitude(), location.getLongitude());
        mMap.clear();

        if(title!= "Your Location"){
            mMap.addMarker(new MarkerOptions().position(userLocation).title(title));

        }
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(userLocation, 10));
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
        mMap.setOnMapLongClickListener(this);

        Intent intent= getIntent();
        if(intent.getIntExtra("PlaceNumber", 0)==0){
            //zoom in on the users location
            locationManager= (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
            locationListener= new LocationListener() {
                @Override
                public void onLocationChanged(Location location) {
                    centerMapOnLocation(location, "Your Location");

                }

                @Override
                public void onStatusChanged(String s, int i, Bundle bundle) {

                }

                @Override
                public void onProviderEnabled(String s) {

                }

                @Override
                public void onProviderDisabled(String s) {

                }
            };
            if(Build.VERSION.SDK_INT < 23){
                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);
            }else{
                if(ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) ==
                        PackageManager.PERMISSION_GRANTED){

                    locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);
                    Location lastKnownLocation= locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
                    centerMapOnLocation(lastKnownLocation, "Your Location");

                }else {
                    ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION},1);

                }
            }

        }else{
            Location placeLocation= new Location(LocationManager.GPS_PROVIDER);
            placeLocation.setLatitude((MainActivity.locations.get(intent.getIntExtra("PlaceNumber", 0))).latitude);
            placeLocation.setLongitude((MainActivity.locations.get(intent.getIntExtra("PlaceNumber", 0))).longitude);

            centerMapOnLocation(placeLocation, (MainActivity.places.get(intent.getIntExtra("PlaceNumber", 0))));


        }
     //   Toast.makeText(getApplicationContext(),intent.getStringExtra("PlaceNumber"),Toast.LENGTH_LONG).show();

        // Add a marker in Sydney and move the camera
    //    LatLng sydney = new LatLng(-34, 151);
     //   mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));
    //    mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
    }

    @Override
    public void onMapLongClick(LatLng latLng) {
        Geocoder geocoder= new Geocoder(getApplicationContext(), Locale.getDefault());
        String address="";
        try {
            List<Address> listAddress= geocoder.getFromLocation(latLng.latitude, latLng.longitude, 1);
            if(listAddress != null && listAddress.size()>0) {
                if(listAddress.get(0).getThoroughfare()!= null){
                    if(listAddress.get(0).getSubThoroughfare()!= null){
                        address+= listAddress.get(0).getSubThoroughfare()+ " ";
                    }
                    address+= listAddress.get(0).getThoroughfare();
                }
            }
            } catch (IOException e) {
            e.printStackTrace();
        }
        if(address==""){
            SimpleDateFormat sdf= new SimpleDateFormat("HH:mm yyyy-MM-dd");
            address=sdf.format(new Date());

        }


        mMap.addMarker(new MarkerOptions().position(latLng).title(address));
        MainActivity.places.add(address);
        MainActivity.locations.add(latLng);
        MainActivity.arrayAdapter.notifyDataSetChanged();

        SharedPreferences sharedPreferences= this.getSharedPreferences("com.adhao.tushar.memorableplaces", Context.MODE_PRIVATE);

        try {

            ArrayList<String> latitudes= new ArrayList<>();
            ArrayList<String> longitudes= new ArrayList<>();

            for( LatLng coordinates : MainActivity.locations){

                    latitudes.add(Double.toString(coordinates.latitude));
                    longitudes.add(Double.toString(coordinates.longitude));
            }

            sharedPreferences.edit().putString("places", ObjectSerializer.serialize(MainActivity.places)).apply();
            sharedPreferences.edit().putString("latitudes", ObjectSerializer.serialize(latitudes)).apply();
            sharedPreferences.edit().putString("longitudes", ObjectSerializer.serialize(longitudes)).apply();


        } catch (IOException e) {
            e.printStackTrace();
        }

        Toast.makeText(getApplicationContext(),"Location Saved", Toast.LENGTH_LONG).show();

    }
}
