 ArrayList<String> users = new ArrayList<>();

    ArrayAdapter arrayAdapter;	



	listView.setChoiceMode(AbsListView.CHOICE_MODE_MULTIPLE);

        arrayAdapter = new ArrayAdapter(this, android.R.layout.simple_list_item_checked, users);

        listView.setAdapter(arrayAdapter);
		
		                 listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                                @Override
                                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                    final CheckedTextView checkedTextView = (CheckedTextView) view;


                                    if (checkedTextView.isChecked()) {

                                        ParseUser.getCurrentUser().getList("isFollowing").add(users.get(i));
                                        ParseUser.getCurrentUser().saveInBackground(new SaveCallback() {
                                            @Override
                                            public void done(ParseException e) {
                                                if(e!=null){
                                                    Toast.makeText(ListActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();
                                              Log.i("errorInfo", e.getMessage());
                                                }else{
                                                    Toast.makeText(ListActivity.this, "Cool", Toast.LENGTH_SHORT).show();

                                                    Log.i("errorInfo","cool");
                                                }
                                            }
                                        });
                                    } else {



                                        ParseUser.getCurrentUser().getList("isFollowing").remove(users.get(i));
                                        ParseUser.getCurrentUser().saveInBackground(new SaveCallback() {
                                            @Override
                                            public void done(ParseException e) {
                                                if(e!=null){
                                                    Toast.makeText(ListActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();
                                                    Log.i("errorInfo", e.getMessage());

                                                }else{
                                                    Toast.makeText(ListActivity.this, "Cool", Toast.LENGTH_SHORT).show();

                                                    Log.i("errorInfo","cool");
                                                }
                                            }
                                        }); }
                                }

                            });


        users.clear();

        ParseQuery<ParseUser> query = ParseUser.getQuery();

        query.whereNotEqualTo("username", ParseUser.getCurrentUser().getUsername());

        query.findInBackground(new FindCallback<ParseUser>() {
            @Override
            public void done(List<ParseUser> objects, ParseException e) {

                if (e == null) {

                    if (objects.size() > 0 ) {

                        for (ParseUser user : objects) {

                            users.add(user.getUsername());

                        }

                        arrayAdapter.notifyDataSetChanged();

                        for (String username : users) {

                            if (ParseUser.getCurrentUser().getList("isFollowing").contains(username)) {

                                listView.setItemChecked(users.indexOf(username), true);

                            }

                        }

                    }

                }


            }
        });
